@use "@shared/styles/_mixins";
@use "@shared/styles/_variables";

$circle-radius: 265px;
:export {
  circleRadius: $circle-radius;
}

.onCircle {
  $transition-duration: 0.3s;

  position: relative;
  width: calc($circle-radius * 2);
  height: calc($circle-radius * 2);
  padding: 0;
  border-radius: 50%;
  list-style: none;
  border: 1px solid variables.$gray-dark;
  transition: transform 0.6s ease-in-out;
  transform-origin: center center;

  pointer-events: auto;

  @for $i from 2 through 6 {
    &--items-#{$i} {
      @include mixins.on-circle(
        $item-count: $i,
        $circle-size: 530px,
        $item-size: 56px
      );
    }
  }

  &__item {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 56px;
    height: 56px;
    margin: -28px;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease-in-out;
    transform-origin: center center;

    &::before {
      content: "";
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 6px;
      height: 6px;
      background-color: variables.$gray-dark;
      border-radius: 50%;
      transition: all 0.3s ease-in-out;
    }

    &.active,
    &:hover {
      &::before {
        width: 100%;
        height: 100%;
        background-color: variables.$gray-light;
        border: 1px solid variables.$gray-dark;
      }
    }

    .item__id {
      position: relative;
      z-index: 1;
      font-size: 20px;
      color: variables.$gray-dark;
      transition: transform 0.6s ease-in-out;
      user-select: none;
      transform-origin: center center;
    }

    span {
      color: transparent;
      font-size: 0px;
      line-height: 0px;
      font-weight: 400;
      opacity: 0;
      user-select: none;
      transition: all $transition-duration ease-in-out;
    }

    &.active,
    &:hover {
      span {
        &.item__id {
          font-size: 20px;
          line-height: 30px;
          font-weight: 400;
          color: variables.$gray-dark;
          opacity: 1;
        }
      }
    }

    span {
      &.item__category {
        opacity: 0;
        transition: opacity 0.3s ease-in-out;
      }
    }

    &.active {
      span {
        &.item__category {
          position: absolute;
          opacity: 1;
          font-size: 20px;
          line-height: 30px;
          font-weight: 400;
          color: variables.$gray-dark;
          rotate: 60deg;
          transform: translate(100px, 0);
          transition-delay: 0.7s !important;
        }
      }
    }
  }
}
